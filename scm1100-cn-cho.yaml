#https://randomnerdtutorials.com/esp32-pinout-reference-gpios/

substitutions:
  DEVICENAME: "scm1100-cn-cho"
  DEVICE_NAME: "scm1100_cn_cho"
  ROOM: ChO

<<: !include "common/Restart.yaml"

esphome:
  name: ${DEVICENAME}

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

esp32_ble_tracker:

bluetooth_proxy:
  active: true

# Enable logging
logger:

# Home Assistant API
api:
#  encryption:
#    key: "/4ZMUBxFLahttY3+zPsvFHI2BSiZVxw04G6zSR9EOoo="

ota:
  password: "d4ad26177e69029c4926f23d2d92c2a8"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
  port: 80

esp32_touch:
  setup_mode: false #Have raw numbers in the log

binary_sensor:
  - platform: esp32_touch
    id: hum_s_wt_${ROOM}
    name: "Hum's Wt ${ROOM}"
    device_class: moisture
    pin: GPIO33
    threshold: 700

  - platform: homeassistant
    entity_id: switch.ch_f_ch1
    id: hum_pwr_${ROOM}_sens

  - platform: template
    name: "Hum's Pwr ${ROOM}"
    id: hum_pwr_${ROOM}
    device_class: power
    lambda: |-
      return id(hum_pwr_${ROOM}_sens).state;

light:
  - platform: status_led
    id: red_led
    pin: GPIO23

  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO25
    num_leds: 1
    name: "NeoPixel Light ${ROOM}"
    effects:
      - random:

switch:
  - platform: template
    name: "Flash Red LED ${ROOM}"
    optimistic: yes
    turn_on_action:
    - while:
        condition:
          lambda: 'return true;'
        then:
        - light.turn_on: red_led
        - delay: 850ms 
        - light.turn_off: red_led
        - delay: 150ms
        - light.turn_on: red_led
        - delay: 150ms 
        - light.turn_off: red_led
        - delay: 150ms
        - light.turn_on: red_led
        - delay: 150ms 
        - light.turn_off: red_led
        - delay: 150ms
    turn_off_action:
    - light.turn_off: red_led

sensor:
#Readings calculated from espTouch sensors
  - platform: template
    name: "Hum's Wt ${ROOM} Raw"
    id: "hum_s_wt_${ROOM}_raw"
    lambda: |-
      return ((uint32_t) id(hum_s_wt_${ROOM})->get_value());